version: '3.7'

services:

  app:
    build:
      context: ./
    ports:
      - "8000:8000"
    volumes:
      - production_static_data:/vol/web
    restart: always
    env_file:
      - .env
    container_name: blog-api
    hostname: blog-api
    networks:
      blog:
    depends_on:
      - db
  
  db:
     image: postgres:12.5
     ports:
       - "5432:5432"
     restart: always
     networks:
      blog:
     volumes:
       - production_db_volume:/var/lib/postgresql/data/
     env_file:
       - .env

  nginix:
    build:
      context: ./nginix
    volumes:
      - production_static_data:/vol/static
    restart: always
    container_name: web
    hostname: web
    networks:
      blog:
    ports:
      - "8010:8010"
    depends_on:
      - app

  apisix:
    image: apache/apisix:2.13.1-alpine
    restart: always
    volumes:
      - ./gateway/apisix_log:/usr/local/apisix/logs
      - ./gateway/apisix_conf/config.yaml:/usr/local/apisix/conf/config.yaml:ro
    depends_on:
      - etcd
    ##network_mode: host
    ports:
      - "80:80/tcp"
      - "9091:9091/tcp"
      - "9443:9443/tcp"
      - "9092:9092/tcp"
    networks:
      blog:

  apisix-dashboard:
    image: apache/apisix-dashboard:2.10.1-alpine
    restart: always
    volumes:
    - ./gateway/dashboard_conf/conf.yaml:/usr/local/apisix-dashboard/conf/conf.yaml
    ports:
    - "9000:9000"
    networks:
      blog:

  etcd:
    image: bitnami/etcd:3.4.15
    restart: always
    volumes:
      - etcd_data:/bitnami/etcd
    environment:
      ETCD_ENABLE_V2: "true"
      ALLOW_NONE_AUTHENTICATION: "yes"
      ETCD_ADVERTISE_CLIENT_URLS: "http://0.0.0.0:2379"
      ETCD_LISTEN_CLIENT_URLS: "http://0.0.0.0:2379"
    ports:
      - "2379:2379/tcp"
    networks:
      blog:

  
volumes:
  production_static_data:
  production_db_volume:
  etcd_data:

networks:
  blog:
    driver: bridge